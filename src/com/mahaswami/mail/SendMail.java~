package com.mahaswami.mail;

import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Properties;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;


public class SendMail {

    private static final String SMTP_HOST_NAME = "smtp.gmail.com";
    private static String SMTP_AUTH_USER = null;
    private static String SMTP_AUTH_PWD = null;

    public static void main(String args[]) throws Exception {
        SendMail smtpMailSender = new SendMail();
//        smtpMailSender.postMail(new String[]{"ssms.iocl@gmail.com", "me@karthiks.in"},
//                "Order Confirmation Subject",
//                "Online Order Confirmation Message. Also include the Tracking Number.");

        smtpMailSender.postMail( new FileInputStream("/tmp/message.txt"), "ssms.iocl@gmail.com", "iocliocl");
    }

    public void postMail(String recipient, String subject, String message) {
        postMail(new String[]{recipient}, subject, message);
    }

    public void postMail(String recipients[], String subject, String message) {
        postMail(recipients, subject, message, "ssms.iocl@gmail.com", "iocliocl");
    }

    public void postMail(String recipients[], String subject,
            String message, String from, String password) {
        try {

            SMTP_AUTH_USER = from;
            SMTP_AUTH_PWD = password;
            boolean debug = false;

            Properties props = new Properties();
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", SMTP_HOST_NAME);
            props.put("mail.smtp.auth", "true");
            Authenticator auth = new SMTPAuthenticator();
            props.setProperty("mail.smtp.submitter", from);

            
            Session session = Session.getDefaultInstance(props, auth);
            session.setDebug(debug);

            // create a message
            Message msg = new MimeMessage(session);

            // set the from and to address
            InternetAddress addressFrom = new InternetAddress(from);
            msg.setFrom(addressFrom);

            InternetAddress[] addressTo = new InternetAddress[recipients.length];
            for (int i = 0; i < recipients.length; i++) {
                addressTo[i] = new InternetAddress(recipients[i]);
            }
            msg.setRecipients(Message.RecipientType.TO, addressTo);

            msg.setText(message);
            msg.setSubject(subject);
            msg.setContent(message, "text/plain");

            Transport.send(msg);


        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }


    public void postMail(InputStream messageStream, String from, String password) {
        try {

            SMTP_AUTH_USER = from;
            SMTP_AUTH_PWD = password;
            boolean debug = false;

            Properties props = new Properties();
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", SMTP_HOST_NAME);
            props.put("mail.smtp.auth", "true");
            Authenticator auth = new SMTPAuthenticator();
            props.setProperty("mail.smtp.submitter", from);


            Session session = Session.getDefaultInstance(props, auth);
            session.setDebug(debug);

            // create a message
            Message msg = new MimeMessage(session, messageStream);

            // set the from and to address
            InternetAddress addressFrom = new InternetAddress(from);
            msg.setFrom(addressFrom);

            Transport.send(msg);


        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }
    private class SMTPAuthenticator extends javax.mail.Authenticator {

        public PasswordAuthentication getPasswordAuthentication() {
            try {
                String username = SMTP_AUTH_USER;
                String password = SMTP_AUTH_PWD;
                return new PasswordAuthentication(username, password);
            } catch (Exception e) {
                e.printStackTrace();
            }
            return null;
        }
    }
}